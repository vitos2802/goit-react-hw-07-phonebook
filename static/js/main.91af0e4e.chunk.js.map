{"version":3,"sources":["components/ContactList/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","redux/actions.js","services/phonebookApi.js","redux/operations.js","redux/reducer.js","redux/store.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","exportModule","changeFilter","createAction","axios","defaults","baseURL","phonebookApi","fetchContacts","get","then","response","data","addContact","name","phone","post","deleteContact","contactId","delete","operations","getContacts","createAsyncThunk","_","a","rejectWithValue","contacts","id","entities","createReducer","contactsOperations","fulfilled","payload","state","action","filter","meta","arg","actions","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactsReduser","devTools","process","getEntities","getFilter","getFilterContacts","createSelector","normalizedFilter","toLowerCase","contact","includes","ContactForm","useState","setName","setPhone","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","checkName","isfilterName","find","alert","className","s","form","onSubmit","preventDefault","formInner","label","type","onChange","required","formButton","ContactItem","useEffect","map","contactItem","deleteButton","onClick","ContactList","contactList","Filter","filterLabel","filterText","Container","children","App","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.91af0e4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__3JHqu\",\"deleteButton\":\"ContactListItem_deleteButton__1Gd38\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__2v7lU\",\"filterText\":\"Filter_filterText__hK93Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1PEth\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__KKNlc\"};","import { createAction } from '@reduxjs/toolkit';\n// import shortid from 'shortid';\n\n// const addContact = createAction('contacts/add', (name, phone) => {\n//   return {\n//     payload: {\n//       // id: shortid.generate(),\n//       name,\n//       phone,\n//     },\n//   };\n// });\n\n// const deleteContact = createAction('contacts/delete');\nconst changeFilter = createAction('contacts/filter');\n\nconst exportModule = { changeFilter };\n\nexport default exportModule;\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nconst fetchContacts = () => {\r\n  return axios.get('/contacts').then(response => response.data);\r\n};\r\n\r\nconst addContact = (name, phone) => {\r\n  return axios.post('/contacts', name, phone).then(({ data }) => data);\r\n};\r\n\r\nconst deleteContact = contactId => {\r\n  return axios.delete(`/contacts/${contactId}`);\r\n};\r\n\r\nconst phonebookApi = { fetchContacts, addContact, deleteContact };\r\n\r\nexport default phonebookApi;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport phonebookApi from '../services/phonebookApi';\r\n\r\nconst getContacts = createAsyncThunk(\r\n  'contacts/getContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await phonebookApi.fetchContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async ({ name, phone }, { rejectWithValue }) => {\r\n    try {\r\n      const data = await phonebookApi.addContact({ name, phone });\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nconst deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await phonebookApi.deleteContact(id);\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nconst operations = { getContacts, addContact, deleteContact };\r\n\r\nexport default operations;\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport actions from './actions';\nimport contactsOperations from './operations';\n\nconst entities = createReducer([], {\n  [contactsOperations.getContacts.fulfilled]: (_, { payload }) => payload,\n\n  [contactsOperations.addContact.fulfilled]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  [contactsOperations.deleteContact.fulfilled]: (state, action) => {\n    return state.filter(({ id }) => id !== action.meta.arg);\n  },\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  entities,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport contactsReduser from './reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReduser,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nexport { store };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getEntities = state => state.contacts.entities;\nconst getFilter = state => state.contacts.filter;\n\nconst getFilterContacts = createSelector(\n  [getEntities, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport { getEntities, getFilter, getFilterContacts };\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getEntities } from '../../redux/selectors';\nimport contactsOperations from '../../redux/operations';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(getEntities);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!checkName()) return;\n\n    dispatch(contactsOperations.addContact({ name, phone }));\n\n    resetForm();\n  };\n\n  const checkName = () => {\n    const isfilterName = !!contacts.find(contact => contact.name === name);\n    isfilterName && alert(`${name} is already in contacts`);\n    return !isfilterName;\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <div className={s.formInner}>\n        <label className={s.label}>\n          <span>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n        </label>\n\n        <label className={s.label}>\n          <span>Phone</span>\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            value={phone}\n            onChange={handleChange}\n            required\n          />\n        </label>\n      </div>\n\n      <button className={s.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport operations from '../../redux/operations';\nimport { getFilterContacts } from '../../redux/selectors';\nimport s from './ContactListItem.module.css';\n\nconst ContactItem = () => {\n  const contacts = useSelector(getFilterContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.getContacts());\n  }, [dispatch]);\n\n  return contacts.map(({ id, name, phone }) => {\n    return (\n      <li key={id} className={s.contactItem}>\n        {name}: {phone}{' '}\n        <button\n          className={s.deleteButton}\n          type=\"button\"\n          onClick={() => dispatch(operations.deleteContact(id))}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n};\n\nexport default ContactItem;\n","import ContactItem from './ContactItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  return (\n    <ul className={s.contactList}>\n      <ContactItem />\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getFilter } from '../../redux/selectors';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.filterLabel}>\n      <p className={s.filterText}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(actions.changeFilter(e.currentTarget.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.Container}>{children}</div>;\n};\n\nexport default Container;\n","import ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\n\nconst App = () => {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2jP_9\",\"formInner\":\"ContactForm_formInner__2X7YM\",\"label\":\"ContactForm_label__38R86\",\"formButton\":\"ContactForm_formButton__YlXC4\"};"],"sourceRoot":""}